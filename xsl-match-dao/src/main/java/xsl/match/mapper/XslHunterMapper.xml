<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xsl.match.mapper.XslHunterMapper">
    <resultMap id="BaseResultMap" type="com.xsl.pojo.XslHunter">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userId" property="userid" jdbcType="INTEGER"/>
        <result column="level" property="level" jdbcType="SMALLINT"/>
        <result column="empirical" property="empirical" jdbcType="INTEGER"/>
        <result column="taskAccNum" property="taskaccnum" jdbcType="INTEGER"/>
        <result column="taskFailNum" property="taskfailnum" jdbcType="INTEGER"/>
        <result column="credit" property="credit" jdbcType="SMALLINT"/>
        <result column="descr" property="descr" jdbcType="VARCHAR"/>
        <result column="lastTime" property="lastTime" jdbcType="DATE"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, userId, level, empirical, taskAccNum, taskFailNum, credit, descr, lastTime
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xsl.pojo.Example.XslHunterExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from xsl_hunter
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from xsl_hunter
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xsl_hunter
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.xsl.pojo.Example.XslHunterExample">
        delete from xsl_hunter
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xsl.pojo.XslHunter">
    insert into xsl_hunter (id, userId, level,
      empirical, taskAccNum, taskFailNum,
      credit, descr, lastTime
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{level,jdbcType=SMALLINT},
      #{empirical,jdbcType=INTEGER}, #{taskaccnum,jdbcType=INTEGER}, #{taskfailnum,jdbcType=INTEGER},
      #{credit,jdbcType=SMALLINT}, #{descr,jdbcType=VARCHAR}, #{lastTime,jdbcType=DATE}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.xsl.pojo.XslHunter">
        insert into xsl_hunter
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userid != null">
                userId,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="empirical != null">
                empirical,
            </if>
            <if test="taskaccnum != null">
                taskAccNum,
            </if>
            <if test="taskfailnum != null">
                taskFailNum,
            </if>
            <if test="credit != null">
                credit,
            </if>
            <if test="descr != null">
                descr,
            </if>
            <if test="lastTime != null">
                lastTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                #{level,jdbcType=SMALLINT},
            </if>
            <if test="empirical != null">
                #{empirical,jdbcType=INTEGER},
            </if>
            <if test="taskaccnum != null">
                #{taskaccnum,jdbcType=INTEGER},
            </if>
            <if test="taskfailnum != null">
                #{taskfailnum,jdbcType=INTEGER},
            </if>
            <if test="credit != null">
                #{credit,jdbcType=SMALLINT},
            </if>
            <if test="descr != null">
                #{descr,jdbcType=VARCHAR},
            </if>
            <if test="lastTime != null">
                #{lastTime,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xsl.pojo.Example.XslHunterExample" resultType="java.lang.Integer">
        select count(*) from xsl_hunter
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update xsl_hunter
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userid != null">
                userId = #{record.userid,jdbcType=INTEGER},
            </if>
            <if test="record.level != null">
                level = #{record.level,jdbcType=SMALLINT},
            </if>
            <if test="record.empirical != null">
                empirical = #{record.empirical,jdbcType=INTEGER},
            </if>
            <if test="record.taskaccnum != null">
                taskAccNum = #{record.taskaccnum,jdbcType=INTEGER},
            </if>
            <if test="record.taskfailnum != null">
                taskFailNum = #{record.taskfailnum,jdbcType=INTEGER},
            </if>
            <if test="record.credit != null">
                credit = #{record.credit,jdbcType=SMALLINT},
            </if>
            <if test="record.descr != null">
                descr = #{record.descr,jdbcType=VARCHAR},
            </if>
            <if test="record.lastaccdate != null">
                lastTime = #{record.lastTime,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update xsl_hunter
        set id = #{record.id,jdbcType=INTEGER},
        userId = #{record.userid,jdbcType=INTEGER},
        level = #{record.level,jdbcType=SMALLINT},
        empirical = #{record.empirical,jdbcType=INTEGER},
        taskAccNum = #{record.taskaccnum,jdbcType=INTEGER},
        taskFailNum = #{record.taskfailnum,jdbcType=INTEGER},
        credit = #{record.credit,jdbcType=SMALLINT},
        descr = #{record.descr,jdbcType=VARCHAR},
        lastTime = #{record.lastTime,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xsl.pojo.XslHunter">
        update xsl_hunter
        <set>
            <if test="userid != null">
                userId = #{userid,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=SMALLINT},
            </if>
            <if test="empirical != null">
                empirical = #{empirical,jdbcType=INTEGER},
            </if>
            <if test="taskaccnum != null">
                taskAccNum = #{taskaccnum,jdbcType=INTEGER},
            </if>
            <if test="taskfailnum != null">
                taskFailNum = #{taskfailnum,jdbcType=INTEGER},
            </if>
            <if test="credit != null">
                credit = #{credit,jdbcType=SMALLINT},
            </if>
            <if test="descr != null">
                descr = #{descr,jdbcType=VARCHAR},
            </if>
            <if test="lastaccdate != null">
                lastTime = #{lastTime,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xsl.pojo.XslHunter">
    update xsl_hunter
    set userId = #{userid,jdbcType=INTEGER},
      level = #{level,jdbcType=SMALLINT},
      empirical = #{empirical,jdbcType=INTEGER},
      taskAccNum = #{taskaccnum,jdbcType=INTEGER},
      taskFailNum = #{taskfailnum,jdbcType=INTEGER},
      credit = #{credit,jdbcType=SMALLINT},
      descr = #{descr,jdbcType=VARCHAR},
      lastTime = #{lastTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>